// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition"

// DATE "10/21/2025 22:52:56"

// 
// Device: Altera EP3C120F780C7 Package FBGA780
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module MultiplicadorSS (
	A0,
	A1,
	B0,
	B1,
	R0,
	R1,
	R2,
	R3);
input 	A0;
input 	A1;
input 	B0;
input 	B1;
output 	R0;
output 	R1;
output 	R2;
output 	R3;

// Design Ports Information
// R0	=>  Location: PIN_AE15,	 I/O Standard: 2.5 V,	 Current Strength: Default
// R1	=>  Location: PIN_AC17,	 I/O Standard: 2.5 V,	 Current Strength: Default
// R2	=>  Location: PIN_AG19,	 I/O Standard: 2.5 V,	 Current Strength: Default
// R3	=>  Location: PIN_AF19,	 I/O Standard: 2.5 V,	 Current Strength: Default
// A0	=>  Location: PIN_AC14,	 I/O Standard: 2.5 V,	 Current Strength: Default
// B0	=>  Location: PIN_AB15,	 I/O Standard: 2.5 V,	 Current Strength: Default
// A1	=>  Location: PIN_AD18,	 I/O Standard: 2.5 V,	 Current Strength: Default
// B1	=>  Location: PIN_AF25,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \R0~output_o ;
wire \R1~output_o ;
wire \R2~output_o ;
wire \R3~output_o ;
wire \A0~input_o ;
wire \B0~input_o ;
wire \R0~0_combout ;
wire \B1~input_o ;
wire \A1~input_o ;
wire \b2v_inst1|S~combout ;
wire \b2v_inst|S~0_combout ;
wire \b2v_inst|AC~0_combout ;


// Location: IOOBUF_X60_Y0_N9
cycloneiii_io_obuf \R0~output (
	.i(\R0~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\R0~output_o ),
	.obar());
// synopsys translate_off
defparam \R0~output .bus_hold = "false";
defparam \R0~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X74_Y0_N23
cycloneiii_io_obuf \R1~output (
	.i(\b2v_inst1|S~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\R1~output_o ),
	.obar());
// synopsys translate_off
defparam \R1~output .bus_hold = "false";
defparam \R1~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X72_Y0_N9
cycloneiii_io_obuf \R2~output (
	.i(\b2v_inst|S~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\R2~output_o ),
	.obar());
// synopsys translate_off
defparam \R2~output .bus_hold = "false";
defparam \R2~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOOBUF_X83_Y0_N16
cycloneiii_io_obuf \R3~output (
	.i(\b2v_inst|AC~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\R3~output_o ),
	.obar());
// synopsys translate_off
defparam \R3~output .bus_hold = "false";
defparam \R3~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X56_Y0_N22
cycloneiii_io_ibuf \A0~input (
	.i(A0),
	.ibar(gnd),
	.o(\A0~input_o ));
// synopsys translate_off
defparam \A0~input .bus_hold = "false";
defparam \A0~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X67_Y0_N15
cycloneiii_io_ibuf \B0~input (
	.i(B0),
	.ibar(gnd),
	.o(\B0~input_o ));
// synopsys translate_off
defparam \B0~input .bus_hold = "false";
defparam \B0~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X75_Y1_N24
cycloneiii_lcell_comb \R0~0 (
// Equation(s):
// \R0~0_combout  = (\A0~input_o  & \B0~input_o )

	.dataa(gnd),
	.datab(gnd),
	.datac(\A0~input_o ),
	.datad(\B0~input_o ),
	.cin(gnd),
	.combout(\R0~0_combout ),
	.cout());
// synopsys translate_off
defparam \R0~0 .lut_mask = 16'hF000;
defparam \R0~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X83_Y0_N1
cycloneiii_io_ibuf \B1~input (
	.i(B1),
	.ibar(gnd),
	.o(\B1~input_o ));
// synopsys translate_off
defparam \B1~input .bus_hold = "false";
defparam \B1~input .simulate_z_as = "z";
// synopsys translate_on

// Location: IOIBUF_X85_Y0_N8
cycloneiii_io_ibuf \A1~input (
	.i(A1),
	.ibar(gnd),
	.o(\A1~input_o ));
// synopsys translate_off
defparam \A1~input .bus_hold = "false";
defparam \A1~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X75_Y1_N26
cycloneiii_lcell_comb \b2v_inst1|S (
// Equation(s):
// \b2v_inst1|S~combout  = (\B0~input_o  & (\A1~input_o  $ (((\B1~input_o  & \A0~input_o ))))) # (!\B0~input_o  & (\B1~input_o  & (\A0~input_o )))

	.dataa(\B0~input_o ),
	.datab(\B1~input_o ),
	.datac(\A0~input_o ),
	.datad(\A1~input_o ),
	.cin(gnd),
	.combout(\b2v_inst1|S~combout ),
	.cout());
// synopsys translate_off
defparam \b2v_inst1|S .lut_mask = 16'h6AC0;
defparam \b2v_inst1|S .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X75_Y1_N4
cycloneiii_lcell_comb \b2v_inst|S~0 (
// Equation(s):
// \b2v_inst|S~0_combout  = (\B1~input_o  & (\A1~input_o  & ((!\A0~input_o ) # (!\B0~input_o ))))

	.dataa(\B0~input_o ),
	.datab(\B1~input_o ),
	.datac(\A0~input_o ),
	.datad(\A1~input_o ),
	.cin(gnd),
	.combout(\b2v_inst|S~0_combout ),
	.cout());
// synopsys translate_off
defparam \b2v_inst|S~0 .lut_mask = 16'h4C00;
defparam \b2v_inst|S~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X75_Y1_N14
cycloneiii_lcell_comb \b2v_inst|AC~0 (
// Equation(s):
// \b2v_inst|AC~0_combout  = (\B0~input_o  & (\B1~input_o  & (\A0~input_o  & \A1~input_o )))

	.dataa(\B0~input_o ),
	.datab(\B1~input_o ),
	.datac(\A0~input_o ),
	.datad(\A1~input_o ),
	.cin(gnd),
	.combout(\b2v_inst|AC~0_combout ),
	.cout());
// synopsys translate_off
defparam \b2v_inst|AC~0 .lut_mask = 16'h8000;
defparam \b2v_inst|AC~0 .sum_lutc_input = "datac";
// synopsys translate_on

assign R0 = \R0~output_o ;

assign R1 = \R1~output_o ;

assign R2 = \R2~output_o ;

assign R3 = \R3~output_o ;

endmodule
